NODES = {
	:n1 => {
		:node_box      => 'centos/7',
		:node_name     => 'otus-web',
		:node_cpu      => 1,
		:node_mem      => 256,
		:node_ip       => '10.0.10.2',
		:node_port_fwd => {
		},
		:storages      => {
		}
	},
	:n2 => {
		:node_box      => 'centos/7',
		:node_name     => 'otus-log',
		:node_cpu      => 1,
		:node_mem      => 256,
		:node_ip       => '10.0.10.3',
		:node_port_fwd => {
		},
		:storages      => {
		}
	},
	:n3 => {
		:node_box      => 'centos/7',
		:node_name     => 'otus-elk',
		:node_cpu      => 2,
		:node_mem      => 4096,
		:node_ip       => '10.0.10.4',
		:node_port_fwd => {
			:kibana => {
				:guest => 5601,
				:host => 8080
			}
		},
		:storages      => {
		}
	}

}


Vagrant.configure("2") do |config|

	NODES.each do |node, node_config|

		config.vm.synced_folder '.', '/vagrant', type: 'rsync', rsync__exclude: ['*.vdi', '.git']

		config.vm.define node_config[:node_name] do |node|

			node.vm.box = node_config[:node_box]
			node.vm.hostname = node_config[:node_name]
			node.vm.network "private_network", ip: node_config[:node_ip]

			node.vm.provider 'virtualbox' do |vb|
				vb.name = node_config[:node_name]
				vb.cpus = node_config[:node_cpu]
				vb.memory = node_config[:node_mem]

				needSATA = false

				node_config[:node_port_fwd].each do |port, port_config|
					node.vm.network "forwarded_port", guest: port_config[:guest], host: port_config[:host]
				end
				
				node_config[:storages].each do |stor, stor_config|
					unless File.exist?(stor_config[:stor_file])
						vb.customize ['createmedium', 'disk', \
						                              '--filename', stor_config[:stor_file], \
						                              '--size', stor_config[:stor_size] * 1024]	
						needSATA = true
					end
				end

				if needSATA == true
					vb.customize ['storagectl', :id, '--name', 'SATA', '--add', 'sata']

					node_config[:storages].each do |stor, stor_config|
						vb.customize ['storageattach', :id, \
					    	                           '--storagectl', 'SATA', \
					        	                       '--port', stor_config[:stor_port], \
					            	                   '--device', 0, \
					                	               '--type', 'hdd', \
					                    	           '--medium', stor_config[:stor_file]]
					end
				end
			end
		end

		config.vm.provision node_config[:node_name], type: :ansible, playbook: "provisioning/#{node_config[:node_name]}.yml"
	end
end
